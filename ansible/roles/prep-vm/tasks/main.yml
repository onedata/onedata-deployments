- name: A become=yes block
  become: yes
  block:
    - name: Gather ipv4 from all hosts
      setup:
        gather_subset:
          - default_ipv4
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "{{ groups['all'] }}"
    - name: Install bind-utils, jq
      apt:
        update_cache: yes
        name:
          - bind9utils
          - jq
          - curl
        state: present
      when: ansible_distribution == "Ubuntu"
    - name: Install bind-utils, jq
      yum:
        name:
          - bind-utils
          - jq
          - curl
        state: present
      when: ansible_distribution == "CentOS"
      
    - name: Set max number of file
      lineinfile:
        regexp: soft nofile
        line: "* soft nofile 63535"
        state: present
        path: /etc/security/limits.conf
    - name: Set max number of file
      lineinfile:
        regexp: hard nofile
        line: "* hard nofile 63535"
        state: present
        path: /etc/security/limits.conf
    - name: Touch /etc/sysctl.d/50-swappiness.conf
      shell: sudo touch /etc/sysctl.d/50-swappiness.conf
    - name: Set swappiness
      lineinfile:
        regexp: vm.swappiness=
        line: vm.swappiness=0
        state: present
        path: /etc/sysctl.d/50-swappiness.conf
    - name: copy disable-thp.service
      copy:
        src: disable-thp.service
        dest: /etc/systemd/system/disable-thp.service
    - name: Enable disable-thp.service
      systemd:
        name: disable-thp
        state: started
    - name: Set net.core.wmem_max
      sysctl:
        name: net.core.wmem_max
        value: "16777216"
    - name: Set net.core.rmem_max
      sysctl:
        name: net.core.rmem_max
        value: "16777216"       
    - name: Set kernel.unprivileged_userns_clone
      sysctl:
        name: kernel.unprivileged_userns_clone
        value: "0"       
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}.{{subdomain}}.{{ domain }}"
    - name: Set FQDNs in /etc/hosts for all nodes
      lineinfile:
        path: /etc/hosts
        regexp: "^{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
        line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{item}}.{{subdomain}}.{{domain}} {{item}}"
      with_items:
        - "{{groups['all']}}"
    - name: Disable resolvconf
      systemd:
        name: systemd-resolved
        state: stopped
        enabled: no
      when: ansible_distribution == "Ubuntu"
    - name: Remove /etc/resolv.conf
      file:
        path: /etc/resolv.conf
        state: absent
    - name: Create /etc/resolv.conf
      copy:
        content: "nameserver 8.8.8.8\n"
        dest: /etc/resolv.conf
    - name: Check for docker
      stat:
        path: /usr/bin/docker
      register: ds
    - name: Install docker
      shell: curl --tlsv1 -sSL https://get.docker.com/ | sh
      when: ds.stat.exists == False
    - name: Start docker
      systemd:
        name: docker
        state: started
    - name: Check for docker-compose
      stat:
        path: /usr/bin/docker-compose
      register: cs      
    - name: Install docker-compose
      shell: |
        curl --tlsv1 -sSL -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/bin/docker-compose
        chmod +x /usr/bin/docker-compose
      when: cs.stat.exists == False
    - name: Comment otc dns
      become: yes
      become_user: root
      replace:
        path: /etc/resolv.conf
        regexp: '^(nameserver 100)'
        replace: '#\1'
        backup: yes
    - name: Create /opt/onedata
      file:
        path: /opt/onedata
        state: directory
        mode: 0755
    - name: Create volume group
      lvg:
        pvs: "{{disk_dev}}"
        vg: "{{vg_name}}"
    - name: Create logical volume
      lvol:
        lv: lvol0
        size: 80%VG
        vg: "{{vg_name}}"
    - name: Create filesystem
      filesystem:
        fstype: ext4
        dev: "/dev/{{vg_name}}/lvol0"
    - name: Mount /opt/onedata
      mount:
        path: /opt/onedata
        state: mounted
        fstype: ext4
        src: "/dev/{{vg_name}}/lvol0"
    - name: Upgrade packages
      apt:
        upgrade: yes
        only_upgrade: yes
        

        
          
